name: CI Pipeline

on:
  pull_request:
    branches: [ '**' ]
  push:
    branches: [ main ]

jobs:
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest
    
    services:
      docker:
        image: docker:20.10.16
        options: --privileged
      
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: bcbs
          POSTGRES_PASSWORD: bcbs
          POSTGRES_DB: bcbs_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint
        run: npm run lint || npm run check
      
      - name: Run unit tests
        run: npm test
        env:
          DATABASE_URL: postgresql://bcbs:bcbs@localhost:5432/bcbs_test
          REDIS_URL: redis://localhost:6379/0
          NODE_ENV: test
      
      - name: Build Docker images
        run: docker-compose build
      
      - name: Start services
        run: docker-compose up -d
      
      - name: Wait for services to be ready
        run: sleep 15
      
      - name: Smoke test
        run: |
          # Check if the server is running
          curl --retry 5 --retry-delay 5 --retry-connrefused http://localhost:5000/ || exit 1
          
          # Run smoke tests if available
          if [ -f "npm run smoke-test" ]; then
            npm run smoke-test
          else
            echo "No smoke tests defined, skipping"
          fi
      
      - name: Tear down
        run: docker-compose down
        if: always()
      
      - name: Build application
        run: npm run build
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
      
      - name: Upload logs on failure
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: |
            logs/
            npm-debug.log*
            yarn-debug.log*
            yarn-error.log*
        if: failure()