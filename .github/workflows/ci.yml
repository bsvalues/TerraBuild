name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test and Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linting
        run: npm run lint
      
      - name: Run TypeScript validation
        run: npm run tsc
      
      - name: Run unit tests
        run: npm run test
  
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run npm audit
        run: npm audit --production
      
      - name: Run CodeQL analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
  
  build:
    name: Build and Validate
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          load: true
          tags: terrabuild:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Run Docker image tests
        run: |
          docker run --rm terrabuild:latest npm run test:smoke
      
      - name: Upload artifact for deployment job
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        uses: actions/upload-artifact@v3
        with:
          name: app-build
          path: |
            dist/
            !dist/**/*.md
            package.json
            package-lock.json