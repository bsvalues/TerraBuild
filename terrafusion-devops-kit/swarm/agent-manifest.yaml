###############################################################
# TerraFusion AI Agent Swarm Manifest
# 
# This file defines the configuration, behavior, and orchestration
# settings for all AI agents in the TerraFusion platform.
#
# Changes to this file will affect agent behavior at runtime
# through the agent-runner system.
###############################################################

version: "1.0.0"
environment: "${ENVIRONMENT:-dev}"
default_settings:
  memory: "persistent"
  feedback_loop: false
  log_level: "info"
  metrics_enabled: true
  sensitivity: "medium"

agents:
  - name: "factor-tuner"
    version: "1.2.1"
    description: "Tunes cost factors based on historical data and market conditions"
    mode: "autonomous"
    schedule: "0 2 * * *"  # Daily at 2 AM
    memory: "persistent"
    sensitivity: "medium"
    on_anomaly: "suggest_correction"
    settings:
      factor_threshold: 0.05
      validation_mode: "strict"
      data_sources:
        - "historical_data"
        - "market_trends"
        - "regional_indices"
      max_adjustment: 0.15
      require_confidence: 0.85

  - name: "benchmark-guard"
    version: "2.0.0"
    description: "Monitors and enforces benchmark compliance for cost calculations"
    mode: "watchdog"
    schedule: "*/30 * * * *"  # Every 30 minutes
    source:
      - "rsmeans"
      - "corelogic"
      - "internal_benchmarks"
    alert_threshold: "5%"
    escalation_policy: "notify_then_block"
    settings:
      tolerance_threshold: 0.03
      comparison_method: "statistical"
      confidence_interval: 0.95
      notification_channels:
        - "slack"
        - "email"
      block_invalid_results: true

  - name: "curve-trainer"
    version: "1.3.4"
    description: "Trains and optimizes cost curve models using historical data"
    mode: "autonomous"
    schedule: "0 3 * * 0"  # Weekly on Sunday at 3 AM
    memory: "persistent"
    sensitivity: "high"
    on_anomaly: "log_and_notify"
    settings:
      training_iterations: 5000
      validation_split: 0.2
      early_stopping: true
      model_types:
        - "linear_regression"
        - "polynomial_regression"
        - "gradient_boosting"
      hyperparameter_tuning: true
      save_checkpoints: true
      min_accuracy: 0.85

  - name: "scenario-agent"
    version: "0.9.7"
    description: "Generates cost scenarios based on different economic conditions"
    mode: "suggestive"
    trigger_on: "user_request"
    max_outputs: 3
    feedback_loop: true
    settings:
      scenario_types:
        - "baseline"
        - "recession"
        - "growth"
        - "inflation"
        - "custom"
      time_horizon_years: 5
      visualization_enabled: true
      include_confidence_intervals: true
      sensitivity_analysis: true
      monte_carlo_iterations: 1000

  - name: "boe-arguer"
    version: "1.0.0"
    description: "Prepares and defends cost assessments for Board of Equalization hearings"
    mode: "collaborative"
    trigger_on: "boe_preparation"
    memory: "persistent"
    settings:
      argument_styles:
        - "factual"
        - "comparative"
        - "precedent_based"
      evidence_sources:
        - "historical_records"
        - "market_analysis"
        - "legal_precedents"
        - "regulatory_guidelines"
      confidence_threshold: 0.75
      citation_required: true
      review_required: true

coordination:
  conflict_resolution: "priority_based"
  agent_priorities:
    - "benchmark-guard"
    - "factor-tuner"
    - "curve-trainer"
    - "scenario-agent"
    - "boe-arguer"
  communication_allowed: true
  shared_memory_enabled: true
  orchestrator: "mcp-coordinator"
  max_concurrent_agents: 3
  health_check_interval: "60s"
  retry_policy:
    max_retries: 3
    backoff_factor: 1.5
    initial_delay: "5s"

observability:
  metrics_endpoint: "/metrics"
  logging:
    format: "json"
    destination: "stdout"
    additional_outputs:
      - type: "loki"
        url: "${LOKI_URL:-http://loki:3100}"
  tracing:
    enabled: true
    sampler_type: "probabilistic"
    sampler_param: 0.1
    exporter: "jaeger"
  alerting:
    channels:
      - name: "slack"
        webhook: "${SLACK_WEBHOOK:-}"
      - name: "email"
        recipients: "${ALERT_EMAILS:-alerts@example.com}"