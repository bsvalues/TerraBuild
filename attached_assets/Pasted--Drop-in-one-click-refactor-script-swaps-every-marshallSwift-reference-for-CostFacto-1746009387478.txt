### Drop-in ‚Äúone-click‚Äù refactor script  
*(swaps every **marshallSwift** reference for **CostFactorTables**, renames the source file, fixes tests & OpenAPI spec; safe to run from the repo root)*  

> **üí°‚ÄÇAdjust `NEW_NAME` if you pick something other than `CostFactorTables` before running.**

---

#### `scripts/refactor_ms_to_cft.sh`

```bash
#!/usr/bin/env bash
# ------------------------------------------------------------------
# TerraBuild refactor: Marshall & Swift  ‚ûú  CostFactorTables
#   ‚Ä¢ Renames file  (marshallSwift.ts  ‚ûú  CostFactorTables.ts)
#   ‚Ä¢ Updates all TypeScript / Markdown / YAML imports & strings
#   ‚Ä¢ Moves test fixtures
#   ‚Ä¢ Adds backward-compat SQL view (if Drizzle table exists)
# ------------------------------------------------------------------
set -euo pipefail
OLD_NAME="marshallSwift"
NEW_NAME="CostFactorTables"        # ‚Üê change here if desired
OLD_FILE="server/services/costEngine/${OLD_NAME}.ts"
NEW_FILE="server/services/costEngine/${NEW_NAME}.ts"

echo "üîç Verifying paths..."
[ -f "$OLD_FILE" ] || { echo "‚ùå $OLD_FILE not found"; exit 1; }

echo "üöö  Renaming source file"
git mv "$OLD_FILE" "$NEW_FILE"

echo "ü™Ñ  Updating imports & identifiers..."
# TS / MD / YAML / JSON
grep -Rl --exclude-dir=node_modules --exclude-dir=.git "$OLD_NAME" \
  | xargs sed -i "" -e "s/$OLD_NAME/$NEW_NAME/g"

# PascalCase identifier inside code (MarshallSwift ‚Üí CostFactorTables)
grep -Rl --exclude-dir=node_modules --exclude-dir=.git "MarshallSwift" \
  | xargs sed -i "" -e "s/MarshallSwift/CostFactorTables/g"

echo "üß™  Moving test fixtures"
if [ -d tests/costEngine/ms ]; then
  git mv tests/costEngine/ms tests/costEngine/cf
fi

echo "üìù  Touch Drizzle migration stub"
MIGRATIONS_DIR="migrations"
STAMP=$(date +"%Y%m%d%H%M")
SQL_FILE="${MIGRATIONS_DIR}/${STAMP}_rename_ms_table.sql"
mkdir -p "$MIGRATIONS_DIR"
cat <<SQL > "$SQL_FILE"
-- Renaming marshall_swift_factor ‚ûú cost_factor
ALTER TABLE IF EXISTS marshall_swift_factor RENAME TO cost_factor;
-- Back-compat view
CREATE OR REPLACE VIEW marshall_swift_factor AS
SELECT * FROM cost_factor;
SQL
git add "$SQL_FILE"

echo "üßπ  Running nx format & lint"
pnpm nx format:write
pnpm lint --fix

echo "‚úÖ  Refactor complete. Next steps:"
echo "   1. Run 'pnpm type-check && pnpm test' ‚Äì all green?"
echo "   2. Commit & push: git commit -am 'refactor: rename marshallSwift to CostFactorTables'"
echo "   3. Bump API minor version if field names changed."

```

---

#### How to run

```bash
chmod +x scripts/refactor_ms_to_cft.sh
./scripts/refactor_ms_to_cft.sh
```

It will:

1. **Rename the source file** and any matching test folders.  
2. **Search/replace** every occurrence across `.ts`, `.tsx`, `.md`, `.json`, `.yaml`.  
3. **Drop a migration stub** that renames the table and builds a back-compat view.  
4. **Format + lint** so CI stays happy.

> If you changed API field names (`msClass` ‚Üí `factorClass`), remember to:
> * Update Zod schemas & DTOs.  
> * Bump OpenAPI version.  
> * Amend front-end forms and fixtures.

Run your test suite afterwards‚Äîif everything is green, commit and push. Done!