global:
  scrape_interval: 15s
  evaluation_interval: 15s
  scrape_timeout: 10s

# Alert rules configuration
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - "alertmanager:9093"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: "prometheus"
    static_configs:
      - targets:
          - "prometheus:9090"

  # Node Exporter for host metrics
  - job_name: "node"
    static_configs:
      - targets:
          - "nodeexporter:9100"

  # cAdvisor for container metrics
  - job_name: "cadvisor"
    static_configs:
      - targets:
          - "cadvisor:8080"

  # TerraFusion Backend API metrics
  - job_name: "terrafusion-backend"
    scheme: http
    metrics_path: /api/metrics
    static_configs:
      - targets:
          - "host.docker.internal:5000" # Local development
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '.*'
        replacement: 'terrafusion-backend'

  # TerraFusion AI Agent metrics
  - job_name: "terrafusion-agents"
    scheme: http
    metrics_path: /api/agent/metrics
    scrape_interval: 5s
    static_configs:
      - targets:
          - "host.docker.internal:5000" # Local development
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '.*'
        replacement: 'terrafusion-agents'

  # Kubernetes service discovery (when deployed to K8s)
  - job_name: "kubernetes-services"
    kubernetes_sd_configs:
      - role: service
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name